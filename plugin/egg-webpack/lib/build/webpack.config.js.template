const webpack = require('atool-build/lib/webpack')
const ExtractTextPlugin = require('extract-text-webpack-plugin')

const ProgressPlugin = webpack.ProgressPlugin
const mapJsonCache = {}

module.exports = (webpackConfig) => {
  webpackConfig.entry = {{ entry }}
  webpackConfig.externals = Object.assign({
    appData: 'window.appData',
  })
  webpackConfig.output.filename = webpackConfig.output.chunkFilename = '[name]-[chunkhash].js'
  webpackConfig.output.path = '{{ outputPath }}'

  webpackConfig.plugins = webpackConfig.plugins.filter((plugin) => {
    if ((plugin instanceof ExtractTextPlugin) || (plugin instanceof webpack.optimize.CommonsChunkPlugin)) {
      return false
    }
    return true
  })
  webpackConfig.plugins = webpackConfig.plugins.concat([
    require('map-json-webpack-plugin')({
      assetsPath: '',
      // appName: '{{ packageName }}',
      output: '{{ mapJsonPath }}',
      cache: mapJsonCache,
    }),
    new ProgressPlugin((percentage, msg) => {
      const stream = process.stderr
      if (stream.isTTY && percentage < 0.71) {
        stream.cursorTo(0)
        stream.write(`ðŸ“¦  ${msg}`)
        stream.clearLine(1)
      } else if (percentage === 1) {
        console.log('\nwebpack: bundle build is now finished.')
      }
    }),
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: process.env.NODE_ENV,
      },
    }),
    new webpack.optimize.CommonsChunkPlugin('common', 'common.js'),
    new ExtractTextPlugin('[name].css', {
      disable: false,
      allChunks: true,
    }),
  ])
  return webpackConfig
}
